<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!-- entry-point-ref show the popup, we want a stateless connection -->
	<http auto-config="true" use-expressions="true" create-session="never">
		<intercept-url pattern="/login/**" access="hasAnyRole('ROLE_ANONYMOUS')"
			method="GET" />
		<intercept-url pattern="/"
			access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" method="GET" />
		<intercept-url pattern="/" access="hasRole('ROLE_ADMIN')"
			method="POST" />
		<intercept-url pattern="/dashboard/**"
			access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" method="GET" />
		<intercept-url pattern="/dashboard/**" access="hasRole('ROLE_ADMIN')"
			method="POST" />
		<intercept-url pattern="/addComputer/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/editComputer/**" access="hasRole('ROLE_ADMIN')" />
		<form-login login-page="/login" authentication-failure-url="/login?error"
			username-parameter="j_username" password-parameter="j_password" />
		<logout logout-success-url="/login?logout" />
		<csrf disabled="true" />
	</http>
	
	<!-- This is the encoder algorithm used for passwords in DB -->
  <beans:bean id="encoder" 
	class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	<beans:constructor-arg name="strength" value="11" />
  </beans:bean>
  
	<authentication-manager>
		<authentication-provider user-service-ref="userService">
			<password-encoder ref="encoder" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>
